(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{431:function(t,v,_){"use strict";_.r(v);var e=_(2),a=Object(e.a)({},(function(){var t=this,v=t._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h2",{attrs:{id:"感恩"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#感恩"}},[t._v("#")]),t._v(" 感恩")]),t._v(" "),v("p",[t._v("不知不觉，开公众号已经3....个月了。从最初的0宣传，靠缘分谋关注，到现在粉丝"),v("code",[t._v("高达")]),t._v("500+，可以给大家一个看到文末广告的机会，雀氏是一件值得庆贺的事情。")]),t._v(" "),v("p",[t._v("由衷的感谢饭佬的"),v("code",[t._v("卖力推广")]),t._v("，榜一大哥(现饭佬榜三大哥)的"),v("code",[t._v("鼓励支持")]),t._v("，汤总管的"),v("code",[t._v("掏心掏肺")]),t._v("，还有"),v("code",[t._v("他婷")]),t._v("以及其他热心群友(榜一大嫂，上层有车人士，迷龙等)的默默分享。最后，感恩各位群友和公众号粉丝（基本也都是饭佬群友）的大力支持，谢谢大家！")]),t._v(" "),v("p",[t._v("后续就没有啥抽奖活动了，大家千万不要"),v("code",[t._v("想多")]),t._v("了。")]),t._v(" "),v("h3",{attrs:{id:"评价ui自动化"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#评价ui自动化"}},[t._v("#")]),t._v(" 评价UI自动化")]),t._v(" "),v("p",[t._v("提起UI自动化，其实很多人是"),v("code",[t._v("嗤之以鼻")]),t._v("的。大家都打心眼里支持着测试"),v("code",[t._v("金字塔模型")]),t._v("。认为UI层投入大，维护难，收益低，总结就是性价比低。而api层呢，用例编写快，模块划分明确，执行速度快。所以大家都希望能够在api层有所建树，投入更多的人力。")]),t._v(" "),v("p",[t._v("这个观点首先我是认同的，但我不是"),v("code",[t._v("全部认同")]),t._v("。确实，UI自动化成本相对很高，而且编写用例相比接口层来说，更加复杂，很多同学还会卡在新手村（元素定位）上面。不过，我们如果只单纯地测试接口，那在当今大前端如此盛行的情况下，怎么去提高前端页面"),v("code",[t._v("大量回归工作")]),t._v("的效率呢？")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("一个例子")]),t._v(" "),v("p",[t._v("我司最近故障复盘的时候，遇到了一个UI相关的问题，其实是很小的一个问题。举个例子，我的api返回给我2个价格字段，比如叫价格A和价格B，但是2个价格数字都比较接近，在一个表格里，出现了A和B的价格显示错位的问题，因为前端取A字段的时候取成了B字段，2者给混淆了。")]),t._v(" "),v("p",[t._v("其实这样的情况很普遍，我自己写前端页面的时候，也经常是copy -> 修改，一不留神就会漏或者改错。如果2个字段相差不大，比如一个是bool一个是string，那我作为一个资深点点我肯定能发现。但如果2个字段内容很接近，那我可能就漏掉这个问题了。毕竟让我肉眼去比对一下api的字段和前端页面的字段，我肯定是"),v("code",[t._v("不乐意")]),t._v("的！")])])]),t._v(" "),v("p",[t._v("写这个例子的目的，就是为了说明一个问题。光是保障了接口的稳定，那也是不够的。因为前端随时可能犯错，再举个简单的例子，如果某一天某个页面的"),v("code",[t._v("确定")]),t._v("按钮消失了，对应的后端接口又没啥问题，我们又不会每个页面都回归到，那不就容易出错了吗？")]),t._v(" "),v("p",[t._v("说这么多，不是为了反驳金字塔理论。只是想说，虽然性价比确实低，但是存在即合理。UI自动化毕竟是最接近用户真实操作的测试方式了，我们不能因为成本高就畏惧，甚至是"),v("code",[t._v("放弃它")]),t._v("。")]),t._v(" "),v("h3",{attrs:{id:"ui自动化发展"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#ui自动化发展"}},[t._v("#")]),t._v(" UI自动化发展")]),t._v(" "),v("p",[t._v("我和饭佬的认识，始于2015年。当时那个年代，UI自动化比接口更流行，因为移动互联网对比现在还不是那么盛行。虫师的Selenium自动化测试那本书，可以说是很多人的入门书籍。我和饭佬都加入了虫师的selenium自动化测试群，当初我俩都是愣头青，饭哥的故事会里面说了，他是自己研究(没势自己造)。而我呢，我运气比较好，进的一家公司偏前端，对于页面要求很高，后端则投入甚少。所以接口方面也没有过多的要求，反而是对UI自动化有大程度的"),v("code",[t._v("依赖")]),t._v("。因为大家经常会在群里讨论技术，所以也都学到了很多。")]),t._v(" "),v("p",[t._v("虽然现在对于UI自动化的讨论变少了，但不代表技术的发展就停滞了。在selenium之后，又来了几位后起之秀。")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("puppeteer")]),t._v(" "),v("p",[t._v("这个是谷歌官方出品的一款自动化测试工具，给我的印象是：本质上他和selenium没有太大区别。")])]),t._v(" "),v("li",[v("p",[t._v("playwright")]),t._v(" "),v("p",[t._v("这是我今天想说的重点，我今天大概花了一下午的时间去试用，发现确实牛批！该有的功能都有，而且相对来说足够稳定。")])])]),t._v(" "),v("h3",{attrs:{id:"playwright相关介绍"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#playwright相关介绍"}},[t._v("#")]),t._v(" PlayWright相关介绍")]),t._v(" "),v("p",[t._v("官方文档: "),v("a",{attrs:{href:"https://playwright.dev/python/docs/intro/#installation",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://playwright.dev/python/docs/intro/#installation"),v("OutboundLink")],1)]),t._v(" "),v("p",[v("img",{attrs:{src:"https://static.pity.fun/picture/2021-6-23/1624378316631-image.png",alt:""}})]),t._v(" "),v("p",[t._v("安装很简单，pip安装playwright以后用playwright install，这一步会下载chromium等。")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://static.pity.fun/picture/2021-6-23/1624378382413-image.png",alt:""}})]),t._v(" "),v("div",{staticClass:"language-Python line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-python"}},[v("code",[t._v("playwright codegen http"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("//")]),t._v("www"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("baidu"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com\n")])]),t._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[t._v("1")]),v("br")])]),v("p",[t._v("这样就能录制百度首页相关用例了。它更强大的功能还有很多，比如能够坚挺Network并拿到对应的值，"),v("code",[t._v("支持录制视频")]),t._v("等。")]),t._v(" "),v("h3",{attrs:{id:"一些改进的想法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#一些改进的想法"}},[t._v("#")]),t._v(" 一些改进的想法")]),t._v(" "),v("p",[t._v("关于UI自动化大家都知道痛点有以下几个：")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("页面变化基本玩完")])]),t._v(" "),v("li",[v("p",[t._v("用例编写和维护都很麻烦")])]),t._v(" "),v("li",[v("p",[t._v("执行时间很长")])]),t._v(" "),v("li",[v("p",[t._v("经常动用sleep大法")])]),t._v(" "),v("li",[v("p",[t._v("调试很麻烦")]),t._v(" "),v("p",[t._v("简单的说就是难写，难调，执行难。")])]),t._v(" "),v("li",[v("p",[t._v("难写")]),t._v(" "),v("p",[t._v("playwright支持录制，录制后支持导出为Java/Python/nodejs等多种代码块，并且是完整的demo。这点是不是有的同学会说，很像selenium ide啊，这不算啥！")]),t._v(" "),v("p",[t._v("当我"),v("code",[t._v("亲自使用")]),t._v("后我才发现，这玩意录下来后执行，跟原先的操作一模一样，我录制了很多个过程中途没有失败过，测试过多次。而之前用selenium ide，录下来的回放直接各种超时。")]),t._v(" "),v("p",[v("strong",[t._v("所以我的想法是，如果以录制为主，改动为辅的方式，能够最快速且稳定编写用例。而且playwright提供了专门的ide给你去获取元素。")])])]),t._v(" "),v("li",[v("p",[t._v("难调")]),t._v(" "),v("p",[t._v("这个还没有很好的办法，后续可能需要动态调试。")])]),t._v(" "),v("li",[v("p",[t._v("执行难")]),t._v(" "),v("p",[t._v("初步考虑分布式执行，类似于selenium grid的形式把用例进行分发，多机器执行，执行完成后汇总结果。解决执行效率低的问题。")]),t._v(" "),v("p",[t._v("为此我构思了一下我的UI自动化平台的样子:")])])]),t._v(" "),v("p",[v("img",{attrs:{src:"https://static.pity.fun/picture/2021-6-23/1624378585415-image.png",alt:""}})]),t._v(" "),v("p",[t._v("具体的内容都在图里了，以上内容都是个人设想，有疑问的地方还望见谅。")]),t._v(" "),v("h3",{attrs:{id:"其他自动化测试框架-selenium"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#其他自动化测试框架-selenium"}},[t._v("#")]),t._v(" 其他自动化测试框架（selenium）")]),t._v(" "),v("p",[t._v("与selenium相关的自动化框架有很多，比如饭佬的wqrfnium（自动定位等等），还有虫师的seldom。我也有一个几年前写的项目，可以给大家作为参考用:")]),t._v(" "),v("p",[t._v("webtest: "),v("a",{attrs:{href:"https://github.com/wuranxu/webTest",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/wuranxu/webTest"),v("OutboundLink")],1)]),t._v(" "),v("p",[t._v("这个项目基于Python，封装了大量api，还有一些错误截图，自动下载浏览器驱动等功能。大家有兴趣也可以参考一下~")])])}),[],!1,null,null,null);v.default=a.exports}}]);