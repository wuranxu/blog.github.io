(window.webpackJsonp=window.webpackJsonp||[]).push([[156],{558:function(t,_,v){"use strict";v.r(_);var a=v(2),e=Object(a.a)({},(function(){var t=this,_=t._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("blockquote",[_("p",[t._v("大家好，我是米洛，求三连！求关注"),_("code",[t._v("米洛的测开日记")]),t._v("!")])]),t._v(" "),_("h3",{attrs:{id:"回顾"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#回顾"}},[t._v("#")]),t._v(" 回顾")]),t._v(" "),_("p",[t._v("我们上一节已经写好了"),_("code",[t._v("左侧")]),t._v("数据表目录，今天继续完成sql编辑器的部分。")]),t._v(" "),_("h3",{attrs:{id:"调研组件"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#调研组件"}},[t._v("#")]),t._v(" 调研组件")]),t._v(" "),_("ul",[_("li",[_("p",[t._v("monaco")]),t._v(" "),_("p",[t._v("因为我们的项目用的是"),_("code",[t._v("React")]),t._v("，市面上很多编辑器都是js编写，react提供了一层方便的封装。")]),t._v(" "),_("p",[t._v("比如我们在"),_("code",[t._v("HTTP调试")]),t._v("页面用的JSON编辑器，是以monaco为原型封装成的"),_("code",[t._v("React组件")]),t._v("。")])])]),t._v(" "),_("p",[_("img",{attrs:{src:"https://static.pity.fun/picture/2021-8-22/1629597234292-image.png",alt:"这个就是monaco"}})]),t._v(" "),_("p",[t._v("monaco呢，是微软开源的，大家熟悉的"),_("code",[t._v("VsCode")]),t._v("其实内部核心也是monaco。")]),t._v(" "),_("p",[t._v("优点是美观，专业，缺点是"),_("code",[t._v("使用比较复杂")]),t._v("。")]),t._v(" "),_("ul",[_("li",[_("p",[t._v("AceEditor")]),t._v(" "),_("p",[t._v("用过yapi的人都知道，里面填写JSON_SCHEMA的时候用到了JSON编辑器，会校验你的"),_("code",[t._v("JSON格式")]),t._v("。里头的编辑器就是"),_("code",[t._v("AceEditor")]),t._v("。")]),t._v(" "),_("p",[t._v("我觉得它的优点就是功能比较强大，包括代码补全，UI响应都做的很棒，唯一的缺点可能就是"),_("code",[t._v("主题")]),t._v("很少，不太好看。")])]),t._v(" "),_("li",[_("p",[t._v("CodeMirror")]),t._v(" "),_("p",[t._v("这是我最开始调研过的一款插件，包括大名鼎鼎的"),_("code",[t._v("leetcode")]),t._v("都是用的它。如果用好了自然非常"),_("code",[t._v("牛逼")]),t._v("，但我确实玩不太转，觉得里面的API太生硬了。")]),t._v(" "),_("p",[t._v("React对应的实现: "),_("code",[t._v("react-codemirror2")])]),t._v(" "),_("p",[t._v("唯一缺点就是使用困难，"),_("code",[t._v("遇到问题不好解决")]),t._v("。")])])]),t._v(" "),_("h3",{attrs:{id:"最终选型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#最终选型"}},[t._v("#")]),t._v(" 最终选型")]),t._v(" "),_("p",[t._v("由于"),_("code",[t._v("AceEditor")]),t._v("我在公司实现了一套，为了避免"),_("code",[t._v("重复造轮子")]),t._v("，花更多的时间去搞一套新的。我决定直接搬运过来。")]),t._v(" "),_("p",[t._v("当然如果"),_("code",[t._v("以后有时间")]),t._v("，我会向leetcode学习，做一个"),_("code",[t._v("更好用")]),t._v("的编辑器。")]),t._v(" "),_("h3",{attrs:{id:"封装编辑器组件"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#封装编辑器组件"}},[t._v("#")]),t._v(" 封装编辑器组件")]),t._v(" "),_("p",[_("img",{attrs:{src:"https://static.pity.fun/picture/2021-8-22/1629614218544-image.png",alt:"简单看看就行"}})]),t._v(" "),_("p",[t._v("接受value, 语言，改变value的事件以及高度和theme。这样我们就可以对编辑器的主题，内容等进行"),_("code",[t._v("完美控制")]),t._v("。")]),t._v(" "),_("p",[t._v("还是看看下最终"),_("code",[t._v("页面成果")]),t._v("吧~")]),t._v(" "),_("p",[_("img",{attrs:{src:"https://static.pity.fun/picture/2021-8-22/1629614332283-image.png",alt:""}})]),t._v(" "),_("p",[t._v("页面分为3块，左侧是上一节编写好的部分，右侧上半部分是"),_("code",[t._v("编辑器")]),t._v("，下半部分是"),_("code",[t._v("返回结果")]),t._v("。")]),t._v(" "),_("p",[_("img",{attrs:{src:"https://static.pity.fun/picture/2021-8-22/1629614391186-image.png",alt:"选中db后的效果"}})]),t._v(" "),_("p",[_("img",{attrs:{src:"https://static.pity.fun/picture/2021-8-22/1629614427972-image.png",alt:"自动补全"}})]),t._v(" "),_("p",[_("img",{attrs:{src:"https://static.pity.fun/picture/2021-8-22/1629614460593-image.png",alt:"切换主题"}})]),t._v(" "),_("p",[_("img",{attrs:{src:"https://static.pity.fun/picture/2021-8-22/1629614510540-image.png",alt:"执行后的结果"}})]),t._v(" "),_("p",[t._v("渐渐地成型了一点~")]),t._v(" "),_("h3",{attrs:{id:"后端bug修复"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#后端bug修复"}},[t._v("#")]),t._v(" 后端bug修复")]),t._v(" "),_("p",[t._v("先给大家道个歉，自己上一节写的"),_("code",[t._v("代码")]),t._v("没有经过"),_("code",[t._v("很严谨")]),t._v("的测试，导致出了一些问题:")]),t._v(" "),_("ul",[_("li",[t._v("问题1: 多个fat环境")])]),t._v(" "),_("p",[_("img",{attrs:{src:"https://static.pity.fun/picture/2021-8-22/1629614664234-image.png",alt:"这个问题我现在是修复了"}})]),t._v(" "),_("p",[t._v("可以看到，出现了2个"),_("code",[t._v("fat")]),t._v("数据。")]),t._v(" "),_("p",[t._v("仔细找一下原因，发现是这里出了岔子:")]),t._v(" "),_("p",[_("img",{attrs:{src:"https://static.pity.fun/picture/2021-8-22/1629614715427-image.png",alt:""}})]),t._v(" "),_("p",[t._v("这里我们添加好第一个fat数据后，idx=0对不，所以env_index里面的数据是这样的:")]),t._v(" "),_("div",{staticClass:"language-JSON line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-json"}},[_("code",[t._v("env_idx = "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),_("span",{pre:!0,attrs:{class:"token property"}},[t._v('"fat"')]),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[t._v("1")]),_("br")])]),_("p",[t._v("那么当第二个fat来了，会取到idx=0，判断"),_("code",[t._v("if not idx")]),t._v("，这里not idx自动隐式转换为True了，导致又append了一次result。")]),t._v(" "),_("p",[t._v("所以这时候我们需要换个判断方式"),_("code",[t._v("if idx is None")]),t._v("，这个判断代表字典里面没有这个key。")]),t._v(" "),_("p",[_("img",{attrs:{src:"https://static.pity.fun/picture/2021-8-22/1629614850111-image.png",alt:"这样就ok了"}})]),t._v(" "),_("ul",[_("li",[t._v("问题2: 天真的以为MetaData可以复用")])]),t._v(" "),_("p",[_("img",{attrs:{src:"https://static.pity.fun/picture/2021-8-22/1629614903059-image.png",alt:"get_tables这个方法"}})]),t._v(" "),_("p",[t._v("还记得get_tables里面这个metadata变量吗？之前是通过方法传递进来的参数，这样只需要实例化MetaData()一次。")]),t._v(" "),_("p",[t._v("但是"),_("code",[t._v("坑就坑在")]),t._v("，后续生成的数据，也会带上之前获得的"),_("code",[t._v("表信息")]),t._v("，所以我们还是不能复用这个对象。")]),t._v(" "),_("h3",{attrs:{id:"改造online-sql方法"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#改造online-sql方法"}},[t._v("#")]),t._v(" 改造online_sql方法")]),t._v(" "),_("p",[t._v("前面我们已经实现过"),_("code",[t._v("在线执行sql的方法")]),t._v("了，但是会发现有一些问题。")]),t._v(" "),_("ul",[_("li",[_("p",[t._v("datetime不是我们想要的")]),t._v(" "),_("p",[t._v("所以我们需要自行处理，拿到我们标准的datetime。")])])]),t._v(" "),_("p",[_("img",{attrs:{src:"https://static.pity.fun/picture/2021-8-22/1629615162908-image.png",alt:"编写2个新的方法，方法json_serialize是针对datetime数据进行序列化"}})]),t._v(" "),_("p",[t._v("拿到字段里面的keys()，也就是列名，用于前端展示。")]),t._v(" "),_("ul",[_("li",[t._v("对于update这种没有返回结果的方法没有兼容")])]),t._v(" "),_("p",[_("img",{attrs:{src:"https://static.pity.fun/picture/2021-8-22/1629615102444-image.png",alt:"如果sql没有返回值，那一定是delete/insert/update之类的语句"}})]),t._v(" "),_("p",[t._v("我们返回"),_("code",[t._v("更新的行数")]),t._v("就好，不管是"),_("code",[t._v("增删")]),t._v("还是"),_("code",[t._v("改")]),t._v("。")]),t._v(" "),_("p",[t._v("添加"),_("code",[t._v("全局loading")]),t._v("，使得体验更好。")]),t._v(" "),_("p",[_("img",{attrs:{src:"https://static.pity.fun/picture/2021-8-22/1629615274271-image.png",alt:"加载数据表的过程会比较缓慢"}})]),t._v(" "),_("h3",{attrs:{id:"后端未来优化"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#后端未来优化"}},[t._v("#")]),t._v(" 后端未来优化")]),t._v(" "),_("p",[t._v("由于数据表不会一直修改，我们可以把他们的数据放到"),_("code",[t._v("redis")]),t._v("之中。这样我们效率会提高很多，加载速度也不会像现在这么慢。")]),t._v(" "),_("p",[t._v("最后，pg的支持还不是很完善，目前来说处于待测状态，有感兴趣的小伙伴可以提供下pg的连接或者自测一下。")]),t._v(" "),_("h2",{attrs:{id:"数据库的配置需要管理员-如果你不是可以联系我-我给你添加。"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#数据库的配置需要管理员-如果你不是可以联系我-我给你添加。"}},[t._v("#")]),t._v(" "),_("code",[t._v("数据库的配置需要管理员，如果你不是可以联系我，我给你添加。")])]),t._v(" "),_("p",[t._v("今天的内容就港（肝）到这里了，数据库这块总算告一段落了~大家"),_("code",[t._v("周末happy")]),t._v("~")]),t._v(" "),_("p",[t._v("文档地址: "),_("a",{attrs:{href:"https://pity.readthedocs.org",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://pity.readthedocs.org"),_("OutboundLink")],1)])])}),[],!1,null,null,null);_.default=e.exports}}]);