(window.webpackJsonp=window.webpackJsonp||[]).push([[204],{604:function(s,a,t){"use strict";t.r(a);var n=t(2),e=Object(n.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("p",[s._v("以后就不宣传啥关注的了，占篇幅。dddd，就来这么"),a("strong",[s._v("高")]),s._v("~\n以后就不宣传啥关注的了，占篇幅。dddd，就来这么"),a("strong",[s._v("高")]),s._v("~")]),s._v(" "),a("h3",{attrs:{id:"go变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#go变量"}},[s._v("#")]),s._v(" Go变量")]),s._v(" "),a("p",[s._v("Go语言里面的变量类型，可不像Python"),a("code",[s._v("那么简单")]),s._v("，毕竟这是它作为静态语言的最后的骄傲。")]),s._v(" "),a("p",[s._v("go语言的变量类型有许多，比Python划分的更细节。下面是我列举的一些对比:")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th"),s._v(" "),a("th",[s._v("int")]),s._v(" "),a("th",[s._v("float")]),s._v(" "),a("th",[s._v("string")]),s._v(" "),a("th",[s._v("list")]),s._v(" "),a("th",[s._v("dict")]),s._v(" "),a("th",[s._v("set")]),s._v(" "),a("th",[s._v("指针")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("Python")]),s._v(" "),a("td",[s._v("有")]),s._v(" "),a("td",[s._v("有")]),s._v(" "),a("td",[s._v("有")]),s._v(" "),a("td",[s._v("有")]),s._v(" "),a("td",[s._v("有")]),s._v(" "),a("td",[s._v("有")]),s._v(" "),a("td",[s._v("无")])]),s._v(" "),a("tr",[a("td",[s._v("go")]),s._v(" "),a("td",[s._v("有，划分更细，有int int8 int16 int32 int64 uint uint32 uint64 rune")]),s._v(" "),a("td",[s._v("有，有float32 float64")]),s._v(" "),a("td",[s._v("有")]),s._v(" "),a("td",[s._v("有数组和slice之分，数组不可变，slice约等于python的list")]),s._v(" "),a("td",[s._v("有map，但是严格规定了map的类型")]),s._v(" "),a("td",[s._v("无")]),s._v(" "),a("td",[s._v("有")])])])]),s._v(" "),a("h3",{attrs:{id:"变量的定义和声明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量的定义和声明"}},[s._v("#")]),s._v(" 变量的定义和声明")]),s._v(" "),a("h2",{attrs:{id:"科普一下变量的声明和赋值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#科普一下变量的声明和赋值"}},[s._v("#")]),s._v(" 科普一下变量的声明和赋值")]),s._v(" "),a("p",[s._v("我们定义一个变量，在Python里面，往往一步就能解决:")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 简单一句，就可以定义一个值为1的变量a")]),s._v("\na "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("上面的代码看起来我们一步就完成了a的定义，但其实变量的定义是分2个阶段的。")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("声明阶段")]),s._v(" "),a("p",[s._v("在静态语言中，变量都是需要指定它的类型的，这一个步骤又被称为"),a("code",[s._v("变量的声明")]),s._v("。这一步我们在其他语言经常见到:")])])]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ul",[a("li",[a("p",[s._v("赋值阶段")]),s._v(" "),a("p",[s._v("而变量只声明，那它的值是多少呢？所以我们会有第二个步骤："),a("code",[s._v("赋值")]),s._v("，我们需要给变量赋一个"),a("code",[s._v("初始值")]),s._v("。但往往这2步可以合二为一:")])])]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("int a是第一个步骤，a = 3是第二个步骤，这就是合起来的写法。")]),s._v(" "),a("p",[s._v("所以Python只不过是"),a("code",[s._v("简化了这个过程")]),s._v("，这也是Python简洁的原因之一。")]),s._v(" "),a("h3",{attrs:{id:"再谈go语言的变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#再谈go语言的变量"}},[s._v("#")]),s._v(" 再谈go语言的变量")]),s._v(" "),a("p",[s._v("go语言在变量的定义和Python不同，它有多种方式。我们都知道，静态语言，譬如Java这样的，都是这样的变量声明方式:")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("变量类型 变量名 = 变量值\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("但go比较奇葩，喜欢反着来，比较适合"),a("code",[s._v("水哥")]),s._v("。接下来我们来看看go的几种变量声明方式。")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("var")]),s._v(" "),a("p",[s._v("var声明是类似于"),a("code",[s._v("js")]),s._v("的方式，比如:")])])]),s._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 注意: go语句结尾不需要分号，很帅气")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("上面是一种声明方式，但因为go严格规定了"),a("code",[s._v("类型")]),s._v("，而上面为什么没有对应的"),a("code",[s._v("类型")]),s._v("呢？因为go"),a("code",[s._v("为了方便")]),s._v("，有些变量一看就知道是什么类型，它会给你进行"),a("code",[s._v("隐式声明")]),s._v("（在一些资料里面经常会用到隐式和显式，啥意思呢，就是"),a("code",[s._v("偷偷的")]),s._v("和"),a("code",[s._v("光明正大")]),s._v("的意思）。")]),s._v(" "),a("p",[s._v("所以呢，上面的声明变量的语句又等于：")]),s._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 看到这里你是不是一千万个卧槽，居然还有这么奇葩的语法")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("因为3一般都是整形，所以如果你不声明类型的话，会默认给你安排成"),a("code",[s._v("int")]),s._v("。所以其实"),a("code",[s._v("代码")]),s._v("里面大部分的变量都是可以省略掉类型的(map/slice这样的除外，"),a("code",[s._v("再省略就不知道里面是啥了")]),s._v(")。")]),s._v(" "),a("ul",[a("li",[a("p",[s._v(":=")]),s._v(" "),a("p",[s._v("go为了不被人吐槽每次都要带上"),a("code",[s._v("var")]),s._v("，所以他有一种"),a("code",[s._v(":=")]),s._v("的赋值方式，这个就约等于python的"),a("code",[s._v("=")]),s._v("赋值了，注意是"),a("code",[s._v("冒号等于")]),s._v("。")]),s._v(" "),a("p",[s._v("但前提是，这个变量不能是全局变量。也就是说这样赋值的变量只能在方法里面用:")])])]),s._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("package")]),s._v(" main\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("bangyidage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// var方式")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// :=方式")]),s._v("\n  b "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 带类型的方式")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" c "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("float32")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12.3")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[s._v("其中b := 3的方式比较方便，用的也比较多。但"),a("code",[s._v("有个要注意的地方就是，go的变量不能声明了不用，也不能重复声明！！！")])]),s._v(" "),a("p",[s._v("比如我先声明了var a = 1，接着使用 a:=2，会报:")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://static.pity.fun/picture/2021-9-18/1631957248828-image.png",alt:"错误提示是，左边的变量名不是一个新的变量"}})]),s._v(" "),a("p",[s._v("如果我们定义了变量b，又想修改之。那我们可以给他重新赋值，也就是上文说的变量的第二个步骤:")]),s._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[s._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 这时候我要改a为3")]),s._v("\na "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h2",{attrs:{id:"通过-直接赋值就好了-因为a之前已经定义过-所以不能对他重复声明-而-是带有声明操作的。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通过-直接赋值就好了-因为a之前已经定义过-所以不能对他重复声明-而-是带有声明操作的。"}},[s._v("#")]),s._v(" 通过"),a("code",[s._v("=")]),s._v("直接赋值就好了，因为a之前已经定义过，所以不能对他"),a("code",[s._v("重复声明")]),s._v("，而:=是带有声明操作的。")]),s._v(" "),a("p",[s._v("补充一个知识点，go里面是可以先声明，"),a("code",[s._v("后赋值")]),s._v("的(也就是把变量的声明和赋值分开)，如果只声明一个变量，变量的默认值为"),a("code",[s._v("该类型的初始值")]),s._v("。什么意思呢？假设你声明一个"),a("code",[s._v("int")]),s._v("，那它默认就是0,声明为string，默认就是空字符串。")]),s._v(" "),a("p",[s._v("有这么一个场景，如果榜一大哥今天打赏5块以上，那么我的心情就会是Happy，没打赏我就是空字符串，5块以下就是UnHappy。在go里面就是这样子的:")]),s._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("package")]),s._v(" day03\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"fmt"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// dashang是个int类型的变量")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("bangyidage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("dashang "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" dashang "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果要对已经声明过的变量赋值，直接用=即可，注意不是:=哦")]),s._v("\n\t\ta "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"happy"')]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\ta "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"unhappy"')]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\tfmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"我的心情: "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br")])]),a("h2",{attrs:{id:"同时定义多个变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#同时定义多个变量"}},[s._v("#")]),s._v(" 同时定义多个变量")]),s._v(" "),a("p",[s._v("go也支持同时定义多个变量，和Python基本一致:")]),s._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 除了:=以外，其他都一样")]),s._v("\na"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// var也支持")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" d "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" f "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("h3",{attrs:{id:"今日总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#今日总结"}},[s._v("#")]),s._v(" 今日总结")]),s._v(" "),a("ol",[a("li",[s._v("go里面有多种数据类型，比Python种类更丰富，更细致")]),s._v(" "),a("li",[s._v("go定义变量的方式有很多种，有"),a("code",[s._v("var")]),s._v("和"),a("code",[s._v(":=")]),s._v("2种")]),s._v(" "),a("li",[s._v("go的变量不能重复声明，只能重新赋值")]),s._v(" "),a("li",[s._v("go允许变量只声明不赋值，那样变量的值默认是该类型的初始值")]),s._v(" "),a("li",[s._v("go变量不能声明却不使用，否则会导致编译出错")]),s._v(" "),a("li",[s._v(":=只能用于方法里面的变量声明")]),s._v(" "),a("li",[s._v("go变量的声明方式是: var 变量名 类型，与传统的方式不一致（奇葩）")]),s._v(" "),a("li",[s._v("go也支持同时声明多个变量")])]),s._v(" "),a("h3",{attrs:{id:"下节介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#下节介绍"}},[s._v("#")]),s._v(" 下节介绍")]),s._v(" "),a("p",[s._v("go里面的常量。Respect！")])])}),[],!1,null,null,null);a.default=e.exports}}]);