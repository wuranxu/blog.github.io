(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{424:function(t,s,a){"use strict";a.r(s);var e=a(2),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h3",{attrs:{id:"踩坑指南"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#踩坑指南"}},[t._v("#")]),t._v(" 踩坑指南")]),t._v(" "),s("p",[t._v("这是一篇排错指南，源自博主近期用到"),s("code",[t._v("APScheduler")]),t._v("较多，特此总结了一些常见的问题，希望对大家有帮助。")]),t._v(" "),s("h3",{attrs:{id:"问题1-can-t-connect-to-mysql的问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#问题1-can-t-connect-to-mysql的问题"}},[t._v("#")]),t._v(" 问题1: Can't Connect to MySQL的问题")]),t._v(" "),s("p",[t._v("如果用的是SQLAlchemy作为job的"),s("code",[t._v("存储介质")]),t._v("，那如果参数没配置好的话，就会导致这个问题。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("问题描述")]),t._v(" "),s("p",[t._v("在涉及到job数据读取/更新的时候，我们会调用"),s("code",[t._v("SQLAlchemy")]),t._v("的Session去完成相关操作。但偶尔会弹出"),s("code",[t._v("Can't Connect to MySQL")]),t._v("或者"),s("code",[t._v("Lose Connection的错误")]),t._v("。")])]),t._v(" "),s("li",[s("p",[t._v("问题分析")]),t._v(" "),s("p",[t._v("MySQL对每个数据库连接是有个有效期的，默认应该是"),s("code",[t._v("8小时")]),t._v("，但这个是可以配置的。而SQLAlchemy的连接都是在连接池里面，而且有一个默认的回收时间。")]),t._v(" "),s("p",[t._v("假如SQLAlchemy开辟的连接回收时间是2小时，但是MySQL配置的连接失效时间是1小时，那么就会出现一个问题:")]),t._v(" "),s("p",[t._v("SQLAlchemy认为连接仍然有效，但MySQL认为没效了，所以连接到了MySQL那边就"),s("code",[t._v("不认了")]),t._v("。就会出现以上错误了。")])]),t._v(" "),s("li",[s("p",[t._v("解决方法")]),t._v(" "),s("p",[t._v("在jobstore处配置pool_recycle参数，这个参数要确保小于数据库的连接超时时间。")]),t._v(" "),s("p",[t._v("比如我配置25分钟，那么数据库超时时间就算只有30分钟，那我也能正常工作。")])])]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 连接回收时间为1500秒")]),t._v("\njob_store "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'default'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" SQLAlchemyJobStore"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("url"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"数据库jdbc连接地址"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" engine_options"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pool_recycle"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1500")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("h3",{attrs:{id:"问题2-job莫名其妙被删除的问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#问题2-job莫名其妙被删除的问题"}},[t._v("#")]),t._v(" 问题2 job莫名其妙被删除的问题")]),t._v(" "),s("p",[t._v("不得不说，这个设定很"),s("code",[t._v("变态")]),t._v("，问题表象是: 你的服务跑着跑着，你的定时任务"),s("code",[t._v("全不见了")]),t._v("。这个非常非常蛋疼。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("问题描述")]),t._v(" "),s("p",[t._v("我这边的情况是，当job无法从数据库中反序列化到内存的时候，APScheduler会自动删除这样的job。")])]),t._v(" "),s("li",[s("p",[t._v("问题分析")]),t._v(" "),s("p",[t._v("注意看具体的日志，经过我的排查，发现APScheduler用的序列化方式是"),s("code",[t._v("pickle")]),t._v("，与JSON相比，是个咱们不太熟悉但又听过的序列化类库。")]),t._v(" "),s("p",[t._v("但这个类库有个很严重的问题，比如我的用的python3.7，里面有个"),s("code",[t._v("pickle.DEFAULT_PROTOCOL")]),t._v("参数，在3.7的时候是3，而到Python3.9以后，这个值变成了4.")]),t._v(" "),s("p",[s("strong",[t._v("APScheduler里面这个参数默认用的pickle.DEFAULT_PROTOCOL参数。")])]),t._v(" "),s("p",[t._v("想象一下，你本地是Python3.9, 但服务器是3.7，那你添加job的时候可能是用的DEFAULT_PROTOCOL=4，但是服务器反序列化job的时候，拿到的就是3了，导致无法反序列化，最终删除job。")])]),t._v(" "),s("li",[s("p",[t._v("解决方法")]),t._v(" "),s("p",[t._v("指定序列化类型，最好知道你即将部署的机器的python版本，目前可以指定为2或者3。")])])]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("job_store "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'default'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" SQLAlchemyJobStore"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("url"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"数据库连接地址"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" pickle_protocol"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" engine_options"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pool_recycle"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1500")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("h3",{attrs:{id:"问题3-用gunicorn或者uvicorn重复执行的问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#问题3-用gunicorn或者uvicorn重复执行的问题"}},[t._v("#")]),t._v(" 问题3 用gunicorn或者uvicorn重复执行的问题")]),t._v(" "),s("p",[t._v("可以看一下我上一篇文章，用socket/分布式锁都可以解决。")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://mp.weixin.qq.com/s?__biz=MzAxMjc1OTkxMA==&mid=2247486807&idx=1&sn=cf8d30893f14faccc07f6fa425ea4aea&chksm=9badab5eacda2248d8ce6147e25a62f4c5e68ccc07690b20a8f630b7558fc1ff81b4c43e7593&token=1020134831&lang=zh_CN#rd",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://mp.weixin.qq.com/s?__biz=MzAxMjc1OTkxMA==&mid=2247486807&idx=1&sn=cf8d30893f14faccc07f6fa425ea4aea&chksm=9badab5eacda2248d8ce6147e25a62f4c5e68ccc07690b20a8f630b7558fc1ff81b4c43e7593&token=1020134831&lang=zh_CN#rd"),s("OutboundLink")],1)]),t._v(" "),s("h3",{attrs:{id:"问题4-分布式部署的问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#问题4-分布式部署的问题"}},[t._v("#")]),t._v(" 问题4 分布式部署的问题")]),t._v(" "),s("p",[t._v("如上所说，不管是"),s("code",[t._v("分布式部署")]),t._v("，还是多worker模式。APScheduler的支持都不是很友好。")]),t._v(" "),s("p",[t._v("因为它旨在给单个Python项目完成定时任务方案，而没有考虑集群等分布式问题。在单个python服务里面，他可以运行良好。我们来看一个例子:")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("服务器A 部署了web服务")])]),t._v(" "),s("li",[s("p",[t._v("服务器B 部署了web服务")]),t._v(" "),s("p",[t._v("2个服务一模一样，之所以部署2台机器，是为了"),s("code",[t._v("负载均衡")]),t._v("考虑。那么我此时调用新增job的方法，请求打到了服务器A，那会是什么过程呢：")])])]),t._v(" "),s("ol",[s("li",[t._v("服务器A接收数据，与本地的func联动并加载job到内存")]),t._v(" "),s("li",[t._v("讲加载后的内存持久化到数据库")])]),t._v(" "),s("p",[t._v("但你要说服务器B的jobstore有这个任务吗？那"),s("code",[t._v("当然是没有的")]),t._v("，因为它没有任何集群的概念。不存在服务器A接受命令，送达到服务器B的机制。")]),t._v(" "),s("p",[t._v("这最直观地导致，你在gunicorn/uvicorn开启N个worker，并调用add接口添加job，不会感知到job重复执行的问题。")]),t._v(" "),s("p",[t._v("而一旦你重启了服务，8个worker都从数据库加载了job到内存中，那你会很快遇到"),s("code",[t._v("重复执行的任务")]),t._v("。")]),t._v(" "),s("p",[t._v("本文仅限于我对APScheduler的浅薄理解而写，如有不周之处还望指正。")])])}),[],!1,null,null,null);s.default=n.exports}}]);