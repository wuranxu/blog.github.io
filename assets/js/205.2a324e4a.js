(window.webpackJsonp=window.webpackJsonp||[]).push([[205],{616:function(t,s,a){"use strict";a.r(s);var n=a(2),v=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"回顾"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#回顾"}},[t._v("#")]),t._v(" 回顾")]),t._v(" "),s("p",[t._v("上一节我们说到了"),s("code",[t._v("go语言")]),t._v("的变量，和Python不一样，Python似乎没有一个常量的概念（"),s("code",[t._v("这个常量指的是不可变的数据")]),t._v("）。")]),t._v(" "),s("p",[t._v("今天我们就来稍微介绍下Go语言里面常量的概念。")]),t._v(" "),s("h3",{attrs:{id:"常量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常量"}},[t._v("#")]),t._v(" 常量")]),t._v(" "),s("p",[t._v("根据上面的描述，我们不难发现，常量是那种类配置文件的数据。")]),t._v(" "),s("p",[t._v("举个例子，我们的http请求有哪些"),s("code",[t._v("状态码")]),t._v("，其实这些数据都是比较固定的，基本不会变，但你要去在每段代码里面都敲出来，可能比较麻烦。")]),t._v(" "),s("p",[t._v("还有诸如"),s("code",[t._v("时间格式化字符串")]),t._v("，在Python里面为: "),s("code",[t._v("%Y-%m-%d %H:%M:%S")]),t._v("，只不过Python没有"),s("code",[t._v("严格控制")]),t._v("是否能改变这个值。")]),t._v(" "),s("p",[t._v("所以一般这个时候我们就会用到"),s("code",[t._v("常量")]),t._v("了，")]),t._v(" "),s("h3",{attrs:{id:"关键字const"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关键字const"}},[t._v("#")]),t._v(" 关键字const")]),t._v(" "),s("p",[t._v("在go语言里面，我们用const关键字（替代var）来定义一个"),s("code",[t._v("常量")]),t._v("。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("常量关键字")]),t._v(" "),s("th",[t._v("go语言")]),t._v(" "),s("th",[t._v("Java")])])]),t._v(" "),s("tbody",[s("tr",[s("td"),t._v(" "),s("td",[t._v("const")]),t._v(" "),s("td",[t._v("final")])])])]),t._v(" "),s("p",[t._v("这里只能先类比下Java了，Java里面我们习惯这么写:")]),t._v(" "),s("div",{staticClass:"language-Java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Woody")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NAME")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abcd"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Woody")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("p",[t._v("通过final+类型修饰了常量。")]),t._v(" "),s("p",[t._v("在go里面，一般常量只能是"),s("code",[t._v("字符串")]),t._v("或者"),s("code",[t._v("数字")]),t._v("，所以不涉及到类型。")]),t._v(" "),s("p",[t._v("我们来看看go里面怎么写:")]),t._v(" "),s("div",{staticClass:"language-Go line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" main\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fmt"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" TIMEFORMAT "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2006-01-02 15:04:05"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  fmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TIMEFORMAT"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])]),s("p",[t._v("就是这样的定义方式，我们用const 变量名 = 变量值来定义一个常量。")]),t._v(" "),s("p",[s("code",[t._v("要注意常量的规范是大写字母哦，如果有多个单词用下划线隔开。")])]),t._v(" "),s("h3",{attrs:{id:"iota"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#iota"}},[t._v("#")]),t._v(" iota")]),t._v(" "),s("p",[t._v("iota，说起这个，大家可能比较陌生。这个无法横向对比，而且"),s("code",[t._v("比较有意思")]),t._v("。")]),t._v(" "),s("p",[t._v("补充知识: 之前讲了import多行引入的方法，其实定义变量也可以多行定义:")]),t._v(" "),s("div",{staticClass:"language-Go line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("  \na "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("  \nb "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("  \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[t._v("还有个要注意的点就是"),s("code",[t._v("全局变量")]),t._v("可以定义但不使用，不会报错，局部变量"),s("code",[t._v("必须使用")]),t._v("。(之前没有强调，搞错了)")]),t._v(" "),s("hr"),t._v(" "),s("p",[t._v("接着讲iota，iota"),s("code",[t._v("只能在常量中定义")]),t._v("，它的意思代表0。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.pity.fun/picture/2021-9-25/1632504070064-Pasted%20image%2020210925010535.png",alt:""}})]),t._v(" "),s("p",[t._v("特别适合0-100分别代表100种业务的情况，iota后面的值会默认等于上一个值"),s("code",[t._v("+1")]),t._v("，所以不需要给cdef再赋值了。")]),t._v(" "),s("p",[s("code",[t._v("这样图中的变量值就是: a=0 c=1 d=2 e=3 f=4")])]),t._v(" "),s("h3",{attrs:{id:"使用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用场景"}},[t._v("#")]),t._v(" 使用场景")]),t._v(" "),s("p",[t._v("当我们需要定义业务错误代码，比如从"),s("code",[t._v("10000")]),t._v("开始:")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("10000 => 用户消音，传错了参数或者参数没填")])]),t._v(" "),s("li",[s("p",[t._v("10001 => 用户没有权限")]),t._v(" "),s("p",[t._v("等等等等，那这样的话，iota就可以派上用场了！")]),t._v(" "),s("p",[t._v("这时候就有小可爱要问了，你的iota从0开始，我怎么定义"),s("code",[t._v("10000")]),t._v("呢？")]),t._v(" "),s("p",[t._v("其实iota是可以运算的，什么意思呢，你试试这样:")])])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.pity.fun/picture/2021-9-25/1632504052260-Pasted%20image%2020210925011001.png",alt:""}})]),t._v(" "),s("p",[t._v("这样就可以从10000起步了，可以看到ide提示我们d的值是"),s("code",[t._v("100002")]),t._v(".")]),t._v(" "),s("p",[t._v("iota其他的细节，大家可以课下提高下，因为用的不算太多，所以这里就不啰嗦了，给孩子加点课后作业吧！")]),t._v(" "),s("h3",{attrs:{id:"作业"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#作业"}},[t._v("#")]),t._v(" 作业")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("如果上图中我定义c = 3，会影响d和e吗")])]),t._v(" "),s("li",[s("p",[t._v("如果我让d = iota，会怎么样")])]),t._v(" "),s("li",[s("p",[t._v("如果我分2个const，在下面再定义一个const，里面也有iota，iota的值会是多少")]),t._v(" "),s("p",[t._v("其实这些大家敲代码都可以知道，所以就不细说了。")])])]),t._v(" "),s("h3",{attrs:{id:"总结时间"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结时间"}},[t._v("#")]),t._v(" 总结时间")]),t._v(" "),s("ol",[s("li",[t._v("定义常量可以用const")]),t._v(" "),s("li",[t._v("var定义的全局变量可以不使用")]),t._v(" "),s("li",[t._v("iota默认为0，并且支持+-法运算")]),t._v(" "),s("li",[t._v("iota定义后的变量可以不赋值，默认为上一个变量的值+1")]),t._v(" "),s("li",[t._v("iota只能在常量中使用")]),t._v(" "),s("li",[t._v("定义变量也可以简写，定义多个")])]),t._v(" "),s("h3",{attrs:{id:"画饼时间"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#画饼时间"}},[t._v("#")]),t._v(" 画饼时间")]),t._v(" "),s("p",[t._v("下一节学什么呢？还没想好，今天没看菜鸟教程的目录。。。")])])}),[],!1,null,null,null);s.default=v.exports}}]);