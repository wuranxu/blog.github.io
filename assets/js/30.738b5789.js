(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{440:function(s,t,a){"use strict";a.r(t);var n=a(2),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h3",{attrs:{id:"python小技巧"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#python小技巧"}},[s._v("#")]),s._v(" Python小技巧")]),s._v(" "),t("p",[s._v("大家好呀，今天是2021年的最后一天啦！预祝大家"),t("strong",[s._v("元旦快乐")]),s._v("的同时，咱们的更新也是不能"),t("code",[s._v("间断")]),s._v("的~于是给大家聊聊新学的知识点: "),t("code",[s._v("枚举类")]),s._v(".")]),s._v(" "),t("h3",{attrs:{id:"读法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#读法"}},[s._v("#")]),s._v(" 读法")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("英式英语: 椅娜姆 [ɪˌnjuːm]")])]),s._v(" "),t("li",[t("p",[s._v("美式读音: 饿呢母 ['enəm]")])])]),s._v(" "),t("h3",{attrs:{id:"枚举的概念"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#枚举的概念"}},[s._v("#")]),s._v(" 枚举的概念")]),s._v(" "),t("p",[s._v("枚举在别的语言中都是很"),t("code",[s._v("常见")]),s._v("的，不知道我当时学Python的时候是不是还没有（也可能我没学到）。先来说说什么是枚举:")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("在数学和计算机科学理论中，一个集的枚举是列出某些有穷序列集的所有成员的程序，或者是一种特定类型对象的计数。这两种类型经常（但不总是）重叠。\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("听起来有点晦涩，其实就是"),t("code",[s._v("列举一组数据的所有可能出现的类型")]),s._v("。我们来看一个生动的例子:")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("东南西北")]),s._v(" "),t("p",[s._v("在不考虑东北，东南这样的"),t("code",[s._v("组合方向")]),s._v("时，我们其实只有4种方向。")])]),s._v(" "),t("li",[t("p",[s._v("星期")]),s._v(" "),t("p",[s._v("同理我们来看看星期X，只可能是星期一到星期天，也就是7种数据。")]),s._v(" "),t("p",[s._v("枚举的意义就是把我们所有可能出现的"),t("code",[s._v("类型")]),s._v("都提前准备好，以备不时之需。理解了概念之后，我们来看一个具体的应用:")])])]),s._v(" "),t("h3",{attrs:{id:"枚举的应用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#枚举的应用"}},[s._v("#")]),s._v(" 枚举的应用")]),s._v(" "),t("p",[s._v("假设我们这时候要记录一个物体的"),t("code",[s._v("朝向")]),s._v("，体现在数据库的话，可能会用0,1,2,3代表东南西北。")]),s._v(" "),t("p",[s._v("假设我们判断方向，我们可能这么写:")]),s._v(" "),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 数据库中的Thing(物体对象)")]),s._v("\na "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Thing"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("position "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"魔法伤害"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("大家看看这样的代码，有没有觉得有什么"),t("code",[s._v("问题")]),s._v("？虽然他能很好地运转，但是仔细想想，过1个月，你再来看，你可能不太清楚1代表南方还是北方。")]),s._v(" "),t("p",[t("strong",[s._v("有的导弹鬼会说：东南西北，1肯定是南哦！")])]),s._v(" "),t("p",[s._v("是没错，但是你想，你组里来了个新人，人家从小背的就是东西南北。他觉得1是西呢？再或者，有个新人习惯性所有数据从1开始，也就是东南西北分别对应"),t("code",[s._v("1234")]),s._v("。")]),s._v(" "),t("p",[s._v("所以这样会给咱们带来一个"),t("code",[s._v("可读障碍")]),s._v("。")]),s._v(" "),t("p",[s._v("那我们换成枚举类，会怎么样呢？show you the code!")]),s._v(" "),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" enum "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" Enum\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Position")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Enum"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    east "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n    south "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n    west "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n    north "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n\na "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Thing"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("postion "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" Postion"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("south"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"魔法伤害"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])]),t("p",[s._v("我们来解析下代码:")]),s._v(" "),t("ol",[t("li",[s._v("我们引入了Enum类")]),s._v(" "),t("li",[s._v("定义了一个类并继承自Enum")]),s._v(" "),t("li",[s._v("里面很简单，定义东南西北，分别为0123")])]),s._v(" "),t("p",[s._v("这样写的话，来了新人(再憨憨)也知道你判断的是位置是不是"),t("code",[s._v("南方")]),s._v("。")]),s._v(" "),t("h3",{attrs:{id:"存在的问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#存在的问题"}},[s._v("#")]),s._v(" 存在的问题")]),s._v(" "),t("p",[s._v("但其实这样写是不对的，Enum类只能和Enum类进行比较。我们看看这样的输出:")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://static.pity.fun/picture/2021-12-31/1640942668379-image.png",alt:""}})]),s._v(" "),t("p",[s._v("惊不惊喜，意不意外？没错，枚举类是只能和枚举类比较，那我们怎么解决这个问题呢？")]),s._v(" "),t("h3",{attrs:{id:"intenum"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#intenum"}},[s._v("#")]),s._v(" IntEnum")]),s._v(" "),t("p",[s._v("别担心，除了枚举类，我们还有继承自Enum的"),t("code",[s._v("IntEnum")]),s._v("，我们改改代码:")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://static.pity.fun/picture/2021-12-31/1640942746859-image.png",alt:""}})]),s._v(" "),t("p",[t("strong",[s._v("注意改动处，我们只是换了个父类。")])]),s._v(" "),t("h3",{attrs:{id:"unique"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#unique"}},[s._v("#")]),s._v(" unique")]),s._v(" "),t("p",[s._v("有的导弹鬼很坏，他问，我可能手滑，复制错了，比如south写成了1，west也写成了1，能不能给我点提示啊？")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://static.pity.fun/picture/2021-12-31/1640942839005-image.png",alt:"这并没有报错呀"}})]),s._v(" "),t("p",[s._v("当然是有的！！！")]),s._v(" "),t("p",[s._v("我们引入unique装饰器，放到枚举类上:")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://static.pity.fun/picture/2021-12-31/1640942875785-image.png",alt:""}})]),s._v(" "),t("p",[s._v("可以看到提醒你2个数据重复啦！！！")]),s._v(" "),t("h3",{attrs:{id:"提高可读性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#提高可读性"}},[s._v("#")]),s._v(" 提高可读性")]),s._v(" "),t("p",[s._v("有人说，这里面定义英文名"),t("code",[s._v("很难受")]),s._v("诶。我就想看东南西北！！！我们可以改写Position的__str__方法，并给个静态方法:")]),s._v(" "),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" enum "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" IntEnum"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" unique\n\n\n"),t("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[s._v("@unique")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Position")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("IntEnum"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    east "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n    south "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n    west "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n    north "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("__str__")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("value "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("east"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"东"')]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("value "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("south"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"南"')]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("value "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("west"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"西"')]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("value "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("north"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"北"')]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("raise")]),s._v(" Exception"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"枚举值错误"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[s._v("@property")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("desc")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("__str__"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Position"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("east"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Position"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("east"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Position"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("east"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Position"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("east"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("desc "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"东"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br")])]),t("p",[s._v("可以看到，我们新增了__str__和desc方法，其实这里if很多，我们在"),t("code",[s._v("Python3.10")]),s._v("可以替换为switch.")]),s._v(" "),t("p",[s._v("看看执行结果:")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://static.pity.fun/picture/2021-12-31/1640943280483-image.png",alt:""}})]),s._v(" "),t("h2",{attrs:{id:"如果我们想要英文south-就调用name属性-想要数字value就调用value属性-要中文名称调用desc即可。"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如果我们想要英文south-就调用name属性-想要数字value就调用value属性-要中文名称调用desc即可。"}},[s._v("#")]),s._v(" 如果我们想要英文"),t("code",[s._v("south")]),s._v("，就调用name属性，想要数字value就调用value属性，要中文名称调用desc即可。")]),s._v(" "),t("p",[s._v("今天的枚举类就介绍到这里了，大家有兴趣可以看看enum里面的其他东西。祝大家"),t("code",[s._v("元旦快乐")]),s._v("~~")])])}),[],!1,null,null,null);t.default=e.exports}}]);