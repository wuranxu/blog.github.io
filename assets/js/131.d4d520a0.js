(window.webpackJsonp=window.webpackJsonp||[]).push([[131],{532:function(t,a,s){"use strict";s.r(a);var _=s(2),e=Object(_.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"测试平台系列-37-运用装饰器给用例加上执行日志"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#测试平台系列-37-运用装饰器给用例加上执行日志"}},[t._v("#")]),t._v(" 测试平台系列(37) 运用装饰器给用例加上执行日志")]),t._v(" "),a("blockquote",[a("p",[t._v("大家好，这里是"),a("code",[t._v("米洛")]),t._v("，一个想和大家一起分享测试开发相关的技术，面试经验和成长经历的博主！")])]),t._v(" "),a("p",[t._v("欢迎大家关注我的公众号: "),a("code",[t._v("米洛的测开日记")]),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"回顾"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#回顾"}},[t._v("#")]),t._v(" 回顾")]),t._v(" "),a("p",[t._v("上一节成功把全局变量运用到了用例之中，后续我们的目标就是要"),a("code",[t._v("完善执行用例的过程")]),t._v("，暂时我们还是单接口+简单断言的经验宝宝，后面我们慢慢成长。")]),t._v(" "),a("h3",{attrs:{id:"一点想法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一点想法"}},[t._v("#")]),t._v(" 一点想法")]),t._v(" "),a("p",[t._v("其实"),a("em",[t._v("React")]),t._v("挺多观众还是不太熟悉的，后续如果我给同事培训的话，可能会分享一些学习React的资料。后续这个教程就不太讲前端部分了，应该大部分人都"),a("code",[t._v("没啥兴趣")]),t._v("。不过我会大概展示一下最新的页面效果。")]),t._v(" "),a("h3",{attrs:{id:"前端优化展示"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前端优化展示"}},[t._v("#")]),t._v(" 前端优化展示")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://static.pity.fun/picture/2021-7-17/1626504108004-image.png",alt:""}})]),t._v(" "),a("p",[t._v("把基础部分，headers，body拆出来分3个tab展示。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://static.pity.fun/picture/2021-7-17/1626504304426-xx.gif",alt:""}})]),t._v(" "),a("p",[a("code",[t._v("有用到全局变量的地方，会拉取出全局变量，并能看到对应的值。这个选项也可以收起来。")])]),t._v(" "),a("h3",{attrs:{id:"开始本节旅程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#开始本节旅程"}},[t._v("#")]),t._v(" 开始本节旅程")]),t._v(" "),a("p",[t._v("看标题就可以知道我们本节要做啥子了。关于用例执行的日志，想起我在上家单位是类似这样的做法:")]),t._v(" "),a("div",{staticClass:"language-Python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("    self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("logger"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("append"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"正在替换全局变量: {}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("format")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("xxx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("在一个用例的执行过程中，可以看到"),a("code",[t._v("非常多")]),t._v("这样的语句。那我们有没有更好的办法呢？")]),t._v(" "),a("p",[t._v("答案是有的。我们可以用"),a("code",[t._v("装饰器")]),t._v("去完成这个操作，在方法执行之前记录日志，执行之后继续记录日志，最终汇总到"),a("code",[t._v("测试报告")]),t._v("中。")]),t._v(" "),a("h3",{attrs:{id:"初步设想"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#初步设想"}},[t._v("#")]),t._v(" 初步设想")]),t._v(" "),a("p",[t._v("编写一个case_log的装饰器，给安排到Executor的每个方法上面，并在每个方法执行之前输出日志就好了。")]),t._v(" "),a("h3",{attrs:{id:"实际操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实际操作"}},[t._v("#")]),t._v(" 实际操作")]),t._v(" "),a("p",[t._v("首先，我们回忆一下之前的Executor类。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://static.pity.fun/picture/2021-7-17/1626504756243-image.png",alt:""}})]),t._v(" "),a("p",[t._v("当时是把Executor中的方法都设置为了"),a("code",[t._v("staticmethod")]),t._v("，也就是说里面的方法/变量都是通过"),a("code",[t._v("类")]),t._v("来访问的。")]),t._v(" "),a("p",[t._v("那这样就导致了一个很麻烦的问题，我们的日志数据，存到哪里呢？因为是类方法，所以要知道"),a("code",[t._v("装饰器接受的参数是不带有self或者cls的")]),t._v("。")]),t._v(" "),a("p",[t._v('有的同学会轻蔑一笑: "你在Executor类里面加一个logger的变量，存放日志不就好了？"')]),t._v(" "),a("p",[t._v("那样是不行的，因为Executor是面向所有用户的，一旦有多个用户在执行用例，那你的logger不就错乱了？简单的说就是这个方法"),a("code",[t._v("不支持并发")]),t._v("。")]),t._v(" "),a("p",[t._v("我们在实际开发的时候一定要考虑到，你不是一个人在用这个系统。那我们改造其实很简单，把方法都设为"),a("code",[t._v("实例方法")]),t._v("，并且在生成Executor实例的时候，初始化一个list()用来存放日志数据。")]),t._v(" "),a("h3",{attrs:{id:"着手改造executor"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#着手改造executor"}},[t._v("#")]),t._v(" 着手改造Executor")]),t._v(" "),a("ul",[a("li",[t._v("新增__init__()方法")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://static.pity.fun/picture/2021-7-17/1626505398338-image.png",alt:""}})]),t._v(" "),a("p",[t._v("这个_logger是专门存放日志数据的。")]),t._v(" "),a("ul",[a("li",[t._v("改造Executor下的方法")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://static.pity.fun/picture/2021-7-17/1626505315611-image.png",alt:""}})]),t._v(" "),a("p",[t._v("就像这样，去掉@staticmethod的装饰器，把Executor.xxx都换成self.xxx。")]),t._v(" "),a("p",[t._v("这样就解决了并发的问题，因为我每个线程拥有的实例是独立的，并不像class一样是共享的。")]),t._v(" "),a("h3",{attrs:{id:"编写case-log装饰器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编写case-log装饰器"}},[t._v("#")]),t._v(" 编写case_log装饰器")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://static.pity.fun/picture/2021-7-17/1626505812552-image.png",alt:""}})]),t._v(" "),a("p",[t._v("我们通过args[0]就能获取到self了("),a("code",[t._v("至于为什么，大家可以思考一下")]),t._v(")，通过self就能获取到logger变量了。（我这里写的cls，没啥关系，能理解它是self就行）")]),t._v(" "),a("p",[t._v("接着就是对参数的获取，日志话术的整理。")]),t._v(" "),a("p",[a("code",[t._v("需要注意的是，我这里对每个方法都获取了一下__doc__，也就是方法的注释，如果没有的话就会取方法的名字。")])]),t._v(" "),a("p",[t._v("对于一些类参数，我们直接输出它的话会比较难以阅读，那我们需要重写它的__str__方法，就可以达到话术友好的目的。")]),t._v(" "),a("p",[t._v("我们去看看TestCase类的改动:")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://static.pity.fun/picture/2021-7-17/1626505852951-image.png",alt:""}})]),t._v(" "),a("p",[t._v("我们标记了他是用例，并且给出了用例名字和id，因为显示用例全部信息不太现实（主要是占位置）。")]),t._v(" "),a("h3",{attrs:{id:"改造执行方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#改造执行方法"}},[t._v("#")]),t._v(" 改造执行方法")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://static.pity.fun/picture/2021-7-17/1626505961941-image.png",alt:""}})]),t._v(" "),a("p",[t._v("把日志给join一下并返回即可。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://static.pity.fun/picture/2021-7-17/1626506104524-image.png",alt:"这里需要实例化"}})]),t._v(" "),a("p",[t._v("看看print的效果:")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://static.pity.fun/picture/2021-7-17/1626506041768-image.png",alt:""}})]),t._v(" "),a("p",[a("code",[t._v("虽然效果不如直接用self.logger.append自由度高，但是也足够使用了。")])]),t._v(" "),a("h3",{attrs:{id:"进阶"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#进阶"}},[t._v("#")]),t._v(" 进阶")]),t._v(" "),a("p",[t._v("其实很多时候日志需要高亮，我们其实可以输出"),a("code",[t._v("html")]),t._v("格式的日志，方便展示"),a("em",[t._v("关键信息")]),t._v("。")]),t._v(" "),a("p",[t._v("今天的后端内容就到这儿了，博主继续去写前端部分了。")]),t._v(" "),a("p",[t._v("在线演示地址: "),a("a",{attrs:{href:"http://47.112.32.195/",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://47.112.32.195/"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("前端代码仓库: "),a("a",{attrs:{href:"https://github.com/wuranxu/pityWeb",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/wuranxu/pityWeb"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("后端代码仓库: "),a("a",{attrs:{href:"https://github.com/wuranxu/pity",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/wuranxu/pity"),a("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=e.exports}}]);