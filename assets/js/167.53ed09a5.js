(window.webpackJsonp=window.webpackJsonp||[]).push([[167],{569:function(s,t,a){"use strict";a.r(t);var n=a(2),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("blockquote",[t("p",[s._v("大家好~我是"),t("code",[s._v("米洛")]),s._v("！"),t("br"),t("br"),s._v("\n我在从0到1打造一个开源平台, 也在编写一套完整的"),t("code",[s._v("接口测试平台系列教程")]),s._v("，希望大家能够多多支持。"),t("br"),s._v(" "),t("br"),s._v("\n欢迎关注我的公众号"),t("code",[s._v("米洛的测开日记")]),s._v("，获取最新文章教程!")])]),s._v(" "),t("h3",{attrs:{id:"回顾"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#回顾"}},[s._v("#")]),s._v(" 回顾")]),s._v(" "),t("p",[s._v("上一节我们讲了适配"),t("code",[s._v("异步方法")]),s._v("的装饰器，这几节我们继续来死磕"),t("code",[s._v("用例逻辑")]),s._v("部分。之前已经完善了数据构造器相关的功能，下面我们来进行一系列的改造来支持"),t("code",[s._v("数据驱动")]),s._v("。")]),s._v(" "),t("p",[s._v("今天就讲一下基础Model。")]),s._v(" "),t("h3",{attrs:{id:"本节概述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#本节概述"}},[s._v("#")]),s._v(" 本节概述")]),s._v(" "),t("p",[s._v("友情提醒: 最近几节会涉及到大量改动，可以直接"),t("code",[s._v("拉取代码")]),s._v("查看对应的改动。")]),s._v(" "),t("p",[s._v("Github地址: "),t("a",{attrs:{href:"https://github.com/wuranxu/pity",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://github.com/wuranxu/pity"),t("OutboundLink")],1)]),s._v(" "),t("p",[s._v("大概的改动部分是，用例的参数不再是单一的，对于"),t("code",[s._v("同一个场景")]),s._v("进行多组数据的测试。")]),s._v(" "),t("h3",{attrs:{id:"构思"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#构思"}},[s._v("#")]),s._v(" 构思")]),s._v(" "),t("p",[s._v("我们的case目前都是写死的数据，以我们的"),t("strong",[s._v("查询存在用户")]),s._v("接口为例子，我们是编写了一个case，然后将name写定在url里面:")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://static.pity.fun/picture/2021-9-14/1631630649250-image.png",alt:"如图所示"}})]),s._v(" "),t("p",[s._v("其实这个name可以有很多组"),t("strong",[s._v("数据")]),s._v("，如果只是name在发生变化，得写很多条"),t("code",[s._v("几乎一样")]),s._v("的case，那可谓是绵羊放了山羊屁。")]),s._v(" "),t("p",[s._v("所以我们可以把数据"),t("code",[s._v("抽离")]),s._v("出来，有用过ddt的可能都知道，unittest+ddt就可以实现"),t("code",[s._v("数据驱动")]),s._v("，并且它会为你生成N多个用例。")]),s._v(" "),t("p",[s._v("所以我们的目标就是要和它达成一样的效果。")]),s._v(" "),t("p",[s._v("说了那么多废话，我就是不说怎么做！！！其实，我们维护一个"),t("code",[s._v("数据表")]),s._v("，里面专门存放"),t("strong",[s._v("测试数据")]),s._v("，然后和case通过case_id进行关联，在用例执行的时候取出case的数据不就好了吗？")]),s._v(" "),t("p",[s._v("是的，大概的效果就是这样，但是实现起来还有许多阻碍，后面我们"),t("code",[s._v("一一道来")]),s._v("。")]),s._v(" "),t("h3",{attrs:{id:"设计数据表"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#设计数据表"}},[s._v("#")]),s._v(" 设计数据表")]),s._v(" "),t("p",[s._v("如果按照以往的尿性，我肯定会设计这样的表:")]),s._v(" "),t("div",{staticClass:"language-Python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 注意这里都是伪代码")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TestCaseData")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("BaseModel"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("id")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Column"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("INT"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    created_at "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Column"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("DATETIME"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    updated_at "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Column"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("DATETIME"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    deleted_at "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Column"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("DATETIME"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    create_user "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Column"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("INT"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    update_user "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Column"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("INT"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("p",[s._v("这些都是除了表核心字段以外的不得不添加的基础字段，那每次都写这么多字段，说实话我"),t("code",[s._v("有点烦")]),s._v("了。")]),s._v(" "),t("p",[s._v("何不定义一个基础的model，然后业务model只保留最核心的字段呢？有了这个想法以后，我就"),t("code",[s._v("停不下来")]),s._v("了，于是我花了些时间完成这个事情。下面就是"),t("strong",[s._v("实践过程")]),s._v("。")]),s._v(" "),t("h3",{attrs:{id:"设计基础model"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#设计基础model"}},[s._v("#")]),s._v(" 设计基础Model")]),s._v(" "),t("p",[s._v("我们知道"),t("code",[s._v("SqlAlchemy")]),s._v("是拥有BaseModel类的，所有的"),t("code",[s._v("类模型")]),s._v("都得继承之。")]),s._v(" "),t("p",[s._v("所以我们的基础Model也得继承它。在models目录下建立文件 "),t("strong",[s._v("basic.py")])]),s._v(" "),t("div",{staticClass:"language-Python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" datetime "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" datetime\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" sqlalchemy "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" INT"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" DATETIME"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" Column"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" BIGINT\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" app"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("models "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" Base\n\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("PityBase")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Base"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("id")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Column"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("INT"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" primary_key"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("True")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    created_at "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Column"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("DATETIME"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nullable"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("False")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    updated_at "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Column"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("DATETIME"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nullable"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("False")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    deleted_at "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Column"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("BIGINT"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nullable"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("False")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" default"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    create_user "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Column"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("INT"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nullable"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("False")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    update_user "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Column"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("INT"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nullable"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("False")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("__init__")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" user"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("id")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("created_at "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" datetime"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("now"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("updated_at "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" datetime"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("now"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("create_user "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" user\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("update_user "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" user\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("id")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("id")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br")])]),t("p",[s._v("注意因为"),t("code",[s._v("软删除")]),s._v("的原因，我们把deleted_at改成了BIGINT，而非datetime对象，如果有疑问可看我之前的"),t("code",[s._v("软删除相关")]),s._v("文章。")]),s._v(" "),t("p",[s._v("这样我们就定义好了"),t("code",[s._v("PityBase")]),s._v("类。接着我们来说下数据表的设计，其实我们的数据表，你是不确定用户需要"),t("code",[s._v("多少字段")]),s._v("的。本身我认为这样的数据很适合放到mongo里面，它支持不同类型的数据放到一张表，也可以不定义字段。")]),s._v(" "),t("p",[s._v("但既然我们用的是"),t("code",[s._v("Mysql")]),s._v("，那我们只能把我们的数据字段写为"),t("code",[s._v("JSON数据")]),s._v("（字符串），通过序列化/反序列化的方式完成我们的需求。（尽管序列化/反序列影响性能）")]),s._v(" "),t("h2",{attrs:{id:"测试数据表"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#测试数据表"}},[s._v("#")]),s._v(" 测试数据表")]),s._v(" "),t("div",{staticClass:"language-Python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[t("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('"""\n测试数据表, 用来存储各个环境下的测试数据，用于数据驱动\n"""')]),s._v("\n__author__ "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"miluo"')]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" sqlalchemy "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" Column"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" INT"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" String"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" UniqueConstraint"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" TEXT\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" app"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("models"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("basic "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" PityBase\n\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("PityTestcaseData")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("PityBase"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    env "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Column"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("INT"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nullable"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("False")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    case_id "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Column"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("INT"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nullable"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("False")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Column"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("String"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("32")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nullable"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("False")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    json_data "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Column"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("TEXT"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nullable"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("False")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n    __table_args__ "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n        UniqueConstraint"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'env'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'case_id'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'name'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'deleted_at'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n    __tablename__ "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"pity_testcase_data"')]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("__init__")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" env"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" case_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" json_data"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" user"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("id")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("super")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("__init__"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("user"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("id")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("env "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" env\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("case_id "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" case_id\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" name\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("json_data "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" json_data\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br")])]),t("p",[s._v("我们存放了env，case_id，name和json_data这4个字段，并设置了"),t("code",[s._v("联合唯一索引")]),s._v("，防止数据重复。")]),s._v(" "),t("p",[s._v("可能有的人会好奇，这个name是啥，"),t("code",[s._v("name")]),s._v("其实是数据的一个标识，也就是个别名而已，用于"),t("code",[s._v("标识")]),s._v("你的这组数据。")]),s._v(" "),t("p",[s._v("里面的__init__方法，调用了父类的__init__()，完成了所有字段的"),t("code",[s._v("赋值")]),s._v("工作。")]),s._v(" "),t("h3",{attrs:{id:"这就完事了吗"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#这就完事了吗"}},[s._v("#")]),s._v(" 这就完事了吗？")]),s._v(" "),t("p",[s._v("其实没有那么简单，我们还需要对PityModel(基础Model)进行一个改动，我们得加一个__abstract__变量，并设置它为True，这样就能"),t("code",[s._v("满足我们的要求")]),s._v("了。细心的朋友可以去掉__abstract__变量试试，你的PityModel会被认为是一个新的数据表，随之会"),t("code",[s._v("引来报错")]),s._v("。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://static.pity.fun/picture/2021-9-14/1631632186247-image.png",alt:"大家感兴趣可以试试"}})]),s._v(" "),t("p",[s._v("今天的内容就先说到这里，下一节我们讲TestcaseData的相关操作以及其他变化。以后我们的数据表，如有新增，都会集成自PityModel类，会"),t("code",[s._v("省不少事儿")]),s._v("。")])])}),[],!1,null,null,null);t.default=e.exports}}]);